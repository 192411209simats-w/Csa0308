#include <stdio.h>

#define MAX 100

// DFS function using recursion
void DFS(int graph[MAX][MAX], int n, int vertex, int visited[]) {
    visited[vertex] = 1;
    printf("%d ", vertex);

    for (int i = 0; i < n; i++) {
        if (graph[vertex][i] == 1 && !visited[i]) {
            DFS(graph, n, i, visited);
        }
    }
}

int main() {
    int n;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    int graph[MAX][MAX];

    printf("Enter adjacency matrix (0 or 1):\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    int startVertex;
    printf("Enter starting vertex (0 to %d): ", n - 1);
    scanf("%d", &startVertex);

    if (startVertex < 0 || startVertex >= n) {
        printf("Invalid start vertex\n");
        return 1;
    }

    int visited[MAX] = {0};

    printf("DFS traversal starting from vertex %d: ", startVertex);
    DFS(graph, n, startVertex, visited);
    printf("\n");

    return 0;
}
